name: Build and Deploy to Cloud Run

on:
  push:
    branches: ['develop', 'feature/devops']

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    environment: staging
    env:
      GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      SERVICE: ${{ secrets.SERVICE }}
      TAG: ${{ github.sha }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_USER: ${{ secrets.DB_USER }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Authenticate to Google
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: Authenticate Docker to Google Cloud Artifact Registry
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        run: docker compose build jamstack && docker compose push

      # - name: Deploy to Cloud Run
      # id: deploy
      #  uses: google-github-actions/deploy-cloudrun@v0
      #  with:
      #    service: ${{ env.SERVICE }}
      #    region: ${{ env.REGION }}
      #    # NOTE: If using a pre-built image, update the image name here
      #    image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}

      # If required, use the Cloud Run url output in later steps
      # - name: Show Output
      # run: echo ${{ steps.deploy.outputs.url }}
